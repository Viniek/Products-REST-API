node-modules
import { Router } from 'express';
import pool from '../db.config.js';
const router = Router();

// Getting all products
router.get("/", async (req, res) => {
  try {
    const result = await pool.query("SELECT * FROM products");
    res.status(200).json({ success: true, data: result.rows });
  } catch (err) {
    res.status(500).json({ success: false, message: err.message });
  }
});

// Getting single product
router.get("/:id", async (req, res) => {
  const id = req.params.id;
  try {
    const result = await pool.query('SELECT * FROM products WHERE id=$1', [id]);
    if (result.rowCount == 0) {
      res.status(404).json({ success: false, message: "Product not found" }); // Changed the error message
    } else {
      res.status(200).json({ success: true, data: result.rows[0] });
    }
  } catch (err) {
    res.status(500).json({ success: false, message: err.message });
  }
});

// Creating a product
router.post("/", async (req, res) => {
  const { product_thumbnail, product_title, product_description, product_cost, on_offer } = req.body;
  try {
    const result = await pool.query(
      "INSERT INTO products (product_thumbnail, product_title, product_description, product_cost, on_offer) VALUES ($1, $2, $3, $4, $5) RETURNING *", // Changed table name from 'users' to 'products', added 'RETURNING *'
      [product_thumbnail, product_title, product_description, product_cost, on_offer]
    );
    res.status(201).json({ success: true, data: result.rows[0] }); // Added to return the newly created product
  } catch (err) {
    res.status(500).json({ success: false, message: err.message });
  }
});

// Updating a single product
router.patch("/:id", async (req, res) => { // Implemented update functionality
  const id = req.params.id;
  const { product_thumbnail, product_title, product_description, product_cost, on_offer } = req.body;
  try {
    const result = await pool.query(
      "UPDATE products SET product_thumbnail = $1, product_title = $2, product_description = $3, product_cost = $4, on_offer = $5 WHERE id = $6 RETURNING *", // Added SQL query for update
      [product_thumbnail, product_title, product_description, product_cost, on_offer, id]
    );
    if (result.rowCount == 0) {
      res.status(404).json({ success: false, message: "Product not found" }); // Changed the error message
    } else {
      res.status(200).json({ success: true, data: result.rows[0] }); // Added to return the updated product
    }
  } catch (err) {
    res.status(500).json({ success: false, message: err.message });
  }
});

// Deleting a single product
router.delete("/:id", async (req, res) => { // Implemented delete functionality
  const id = req.params.id;
  try {
    const result = await pool.query('DELETE FROM products WHERE id = $1 RETURNING *', [id]); // Added SQL query for delete
    if (result.rowCount == 0) {
      res.status(404).json({ success: false, message: "Product not found" }); // Changed the error message
    } else {
      res.status(200).json({ success: true, message: "Product deleted successfully" }); // Added success message
    }
  } catch (err) {
    res.status(500).json({ success: false, message: err.message });
  }
});

export default router;|

# 	"product_thumbnail":"http://dummyimage.com/56x75.png/5fa2dd/ffffff", 
				"product_title": "Pastry - key Limepoppy Seed tea",
			"product_description": "Quisque id justo sit amet sapien dignissim vestibulum. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Nulla dapibus dolor vel est. Donec odio justo, sollicitudin ut, suscipit a, feugiat et, eros.",
			"product_cost": "$1.99",
			"on_offer": "false"
}
